/**
* @author Abdennour TOUMI
http://gorm.grails.org/latest/api/org/grails/datastore/mapping/query/api/BuildableCriteria.html
http://gorm.grails.org/latest/api/grails/orm/HibernateCriteriaBuilder.html
allEq, and, between, cache, eq, eqAll, eqAll, eqProperty, exists, ge, geAll,
geAll, geProperty, geSome, geSome, gt, gtAll, gtAll, gtProperty,
gtSome, gtSome, gte, idEq, idEquals, ilike, in, in, in, in,
inList, inList, inList, inList, isEmpty, isNotEmpty, isNotNull,
isNull, le, leAll, leAll, leProperty, leSome, leSome,
like, lt, ltAll, ltAll, ltProperty, ltSome, ltSome, lte, ne, neProperty,
not, notExists, notIn, notIn, or,
order, order, order, readOnly, rlike, sizeEq, sizeGe, sizeGt, sizeLe, sizeLt, sizeNe
*/
class _{

      constructor(rw){
           this.tests=[true]
           this.e=rw;
          this.context='and'
          return this;
      }

      result(){
        return !this.tests.contains(false);
      };
      and(fn){
        if(!this.tests.contains(false)){
          fn.delegate(this)();
          this.tests=[this.result()]
        }

        return this;
      };
      or(fn){
        if(this.youmkenElmouwasale()){
            this.tests=[false];
            this.context='or'

            fn.delegate(this)();

            this.context='and'
            if(this.tests.length===1){
                //إذا الوظيفة فارغة ، فلم يقع إضافة و لا سيء في الجدول
                this.tests=[true]
            }
            else{
              this.tests=[this.tests.reduce(function(a,b){return a||b},false)];
            }

        }

        return this;
      };
      xor(fn){
        if(this.youmkenElmouwasale()){
            this.context='xor'
            this.testsprev=this.tests.length
            fn.call(this)
            this.context='and'
            if(this.tests.length>this.testsprev){
                //إذا الوظيفة فارغة ، فلم يقع إضافة و لا سيء في الجدول
              this.tests=[this.tests.reduce(function(a,b){return (a ? !b: b )},true)];
            }

        }

        return this;
      };

      eq(prop,val){
            if(this.youmkenElmouwasale()){
               this.tests.push(Object.equals(this.e[prop] ,val))
            }
          return this;
      };
      neq(prop,val){
          if(this.youmkenElmouwasale()){
          this.tests.push(!Object.equals(this.e[prop] ,val))
          }
          return this;
      };
      isNull(prop){
          if(this.youmkenElmouwasale()){
          this.tests.push((this.e[prop] == null) && (typeof this.e[prop] ==='undefined' ))
          }
          return this;
      };
      like(prop,val){

          if(this.youmkenElmouwasale()){
          if(this.e[prop] && this.e[prop] instanceof String){
              if(this.e[prop].startsWith('%') && this.e[prop].endsWith('%'))
           this.tests.push(this.e[prop].toLowerCase().indexOf(val.toLowerCase())!==-1)
             else{
                 if(this.e[prop].startsWith('%')){
                      this.tests.push(this.e[prop].toLowerCase().endsWith(val.toLowerCase()))
                 }else if(this.e[prop].endsWith('%')){
                      this.tests.push(this.e[prop].toLowerCase().startsWith(val.toLowerCase()))
                 }else{
                     this.tests.push(this.e[prop].toLowerCase().indexOf(val.toLowerCase())!==-1)
                 }
             }
          }else{
              this.tests.push(false)
          }
          }
          return this;
      };

      le(prop,val){
          if(this.youmkenElmouwasale()){

            this.tests.push(this.e[prop] <= val)
          }
          return this;
      };
      ge(prop,val){
          if(this.youmkenElmouwasale()){
            this.tests.push(this.e[prop] >= val)
        }
          return this;
      };
      lt(prop,val){
          if(this.youmkenElmouwasale()){
          this.tests.push(this.e[prop] <val)
          }
          return this;
      };
      gt(prop,val){
          if(this.youmkenElmouwasale()){
           this.tests.push(this.e[prop] >val)
          }
          return this;
      };
      between(prop,val1,val2){
          if(this.youmkenElmouwasale()){
           this.tests.push(this.e[prop] >=val1 && this.e[prop] <= val2)
          }
          return this;
      };
      inList(prop,val){
          if(this.youmkenElmouwasale()){
           this.tests.push(val.contains(this.e[prop]));
          }
          return this;
      };

      youmkenElmouwasale(){
          return ((!this.tests.contains(false)) && this.context==='and')|| (['or','xor'].contains(this.context));

      };


}

module.exports=_;
