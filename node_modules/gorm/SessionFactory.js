//https://docs.jboss.org/hibernate/orm/3.5/javadocs/org/hibernate/Session.html
(()=>{
  class _ {
    constructor(){
      this.started=new Date();
      // --{_class:,db:[]}
      this.session=[];
    }

    addDB(db,domain,withoutUnicity){
      db=(db instanceof Array)?db:[db];
      if(!withoutUnicity){
           db.map((row)=>{
             if(this.dbRowExist(domain,row[domain.GORM_ID || 'id'])){
               console.log(new Date(),` : Instance  with ID = "${row[domain.GORM_ID || 'id']}" already exists `)
               throw `Cannot persist duplicated instances`;
             }
           })
      }
      if(this.dbExist(domain)){
        this.session[this.indexOf(domain)].db.push(...db);
      }else{
        this.session.push({domain:domain,db:db});
      }
    }
    dbExist(domain){
        return this.session.filter((e)=>e.domain===domain).length >=1;
    }
    dbRowExist(domain,id){
        return this.getDB(domain).findIndex(row=>row[domain.GORM_ID||'id']===id) >=0

    }

    indexOf(domain){
      return this.session.findIndex(e=>e.domain==domain)//.indexOf(domain);
    }
    getDB(domain){
       try {
         return this.session.filter((e)=>e.domain===domain)[0].db;
       } catch (e) {
           return [];
       }
    }

  }
  module.exports=_;
})()
